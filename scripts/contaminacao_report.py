import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Caminho para o arquivo .selfSM
selfsm_path = snakemake.input.selfsm
report_path = snakemake.output.contaminacao_report

# Ler o arquivo
df = pd.read_csv(selfsm_path, sep='\t')

# Pegar a primeira amostra (ou loop depois)
sample = df.iloc[0]
seq_id = sample["#SEQ_ID"]
freemix = sample["FREEMIX"]
avg_dp = sample["AVG_DP"]
snps = sample["#SNPS"]
reads = sample["#READS"]

# Interpretar FREEMIX
if freemix < 0.005:
    status = "‚úÖ Sem evid√™ncia de contamina√ß√£o"
elif freemix < 0.03:
    status = "‚ö†Ô∏è Potencial leve contamina√ß√£o"
else:
    status = "‚ùå Contamina√ß√£o significativa"


# Criar conte√∫do do relat√≥rio em Markdown
md_content = f"""
# Relat√≥rio de Contamina√ß√£o ‚Äì VerifyBamID2
---

## üìä Tabela de Refer√™ncia ‚Äì Interpreta√ß√£o do FREEMIX

| Intervalo FREEMIX | Interpreta√ß√£o                     |
|------------------:|-----------------------------------|
| `< 0.005`         | ‚úÖ Sem evid√™ncia de contamina√ß√£o   |
| `0.005 ‚Äì 0.03`    | ‚ö†Ô∏è Leve contamina√ß√£o               |
| `> 0.03`          | ‚ùå Alta contamina√ß√£o               |

---
**Amostra:** `{seq_id}`  
**Total de SNPs:** {snps}  
**N√∫mero de Leituras:** {reads}  
**Profundidade M√©dia:** {avg_dp:.2f}  
**FREEMIX (estimativa de contamina√ß√£o):** `{freemix:.6f}`  
**Status de contamina√ß√£o:** {status}

"""

# Salvar como arquivo .md
with open("report_path", "w") as f:
    f.write(md_content)

print("‚úÖ Relat√≥rio Markdown salvo como 'report_verifybamid2.md'")
